B Trees (Dynamic Multilevel Index)

    B-Tree is a self-balancing search tree designed to efficently manage large amount of data, making it ideal for use in databases and file systems.

* Every node in a B Tree will hold a maximum of m children and (m-1) keys, since the order of the tree is m.
* Every node in a B Tree, except root and leaf, can hold al least m/2 children
* The root node must have no less than two children.
* All the paths in a B Tree must end at the same level, i.e. the leaf nodes must be at the same level.
* A B Tree always maintains sorted data.

Basic Operation of B Trees

    Insertion Operation

    Step 1 - Calculate the maximum (m-1) and, minimum (|m/2|-1) number of keys a node can hold, where m is denoted by the order of the B Tree.

    Insert 1,2,3,4,5,6,7,8,9,10 into a B Tree

        * Order (m) = 4
        * Maximum Keys(m-1) = 3
        * Minimum Keys(|m/2|)-1 = 1
        * Maximum Children = 4
        * Minimum Children(|m/2|) = 2
    
Step 2 - The data is inserted into the tree using the binary search insertion and once the key reach the maximum number, the node is split into half and the median key becomes the internal node while the left right keys becomes its children.

Step 3 - All the leaf nodes must be on the same level.

Deletion Operation

    Case 1 - If the key to be deleted is in a leaf node and the deletion does not violate the minimum key property, just delete the node.

    Case 2 - If the key to be deleted is in a leaf node but the deletion violate the minimum key property, borrow a key from either its left sibling or right sibling. In case if both siblings have exact minimum number of keys, merge the node in either of them.

    Case 3 - If the key to be deleted is in an internal node, it is replaced by a key in either left child o right child based on which child has more keys. But if both child nodes have minimum number of keys, they're merged together.

    Case 4 - If the key to be deleted is in an internal node violate the minimum keys property, and both its children and sibling have minimum number of keys, merge the children. Then merge  its sibling with its parent.